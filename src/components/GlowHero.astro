---
import {Image} from 'astro:assets';
// import {PAGE_TITLE_ID} from '@astrojs/starlight/constants';
import type {Props} from '@astrojs/starlight/props';
import CallToAction from '@astrojs/starlight/components/CallToAction.astro';

const {data} = Astro.props.entry;
const {title = data.title, tagline, image, actions = []} = data.hero || {};

const imageAttrs = {
    loading: 'eager' as const,
    decoding: 'async' as const,
    width: 400,
    height: 400,
    alt: image?.alt || '',
};

let darkImage: ImageMetadata | undefined;
let lightImage: ImageMetadata | undefined;
let rawHtml: string | undefined;
if (image) {
    if ('file' in image) {
        darkImage = image.file;
    } else if ('dark' in image) {
        darkImage = image.dark;
        lightImage = image.light;
    } else {
        rawHtml = image.html;
    }
}
// Due to a Starlight issue, use alternative one
// import {PAGE_TITLE_ID} from '@astrojs/starlight/constants';
const PAGE_TITLE_ID = '_top';
---

<div class="hero">
    {
        darkImage && (
            <Image
                src={darkImage}
                {...imageAttrs}
                class:list={{'light:sl-hidden': Boolean(lightImage)}}
            />
        )
    }
    {lightImage &&
        <Image src={lightImage} {...imageAttrs} class="dark:sl-hidden" />}
    {rawHtml &&
        <div class="hero-html sl-flex" set:html={rawHtml} />}
    <div class="sl-flex stack">
        <div class="sl-flex copy">
            <!--<h1 id={PAGE_TITLE_ID} data-page-title set:html={title} />-->
            <!-- Rewrite start of Hero title-->
            <div class="lyricify-title-lyrics-container">
                <div class="lyricify-title-lyrics-effect1">
                    <span>{title}</span>
                </div>
                <h1 id={PAGE_TITLE_ID} class="lyricify-title-lyrics-view" set:html={title}></h1>
            </div>
            <!-- Rewrite end-->
            {tagline &&
                <div class="tagline" set:html={tagline} />}
        </div>
        {
            actions.length > 0 && (
                <div class="sl-flex actions">
                    {actions.map(({text, ...attrs}) => (
                        <CallToAction {...attrs} set:html={text} />
                    ))}
                </div>
            )
        }
    </div>
</div>

<style>
    .hero {
        display: grid;
        align-items: center;
        gap: 1rem;
        padding-bottom: 1rem;
    }

    .hero > img,
    .hero > .hero-html {
        object-fit: contain;
        width: min(70%, 20rem);
        height: auto;
        margin-inline: auto;
    }

    .stack {
        flex-direction: column;
        gap: clamp(1.5rem, calc(1.5rem + 1vw), 2rem);
        text-align: center;
    }

    .copy {
        flex-direction: column;
        gap: 1rem;
        align-items: center;
    }

    .copy > * {
        max-width: 50ch;
    }

    h1 {
        font-size: clamp(var(--sl-text-3xl), calc(0.25rem + 5vw), var(--sl-text-6xl));
        line-height: var(--sl-line-height-headings);
        font-weight: 600;
        color: var(--sl-color-white);
    }

    .tagline {
        font-size: clamp(var(--sl-text-base), calc(0.0625rem + 2vw), var(--sl-text-xl));
        color: var(--sl-color-gray-2);
    }

    .actions {
        gap: 1rem 2rem;
        flex-wrap: wrap;
        justify-content: center;
    }

    @media (min-width: 50rem) {
        .hero {
            grid-template-columns: 7fr 4fr;
            gap: 3%;
            padding-block: clamp(2.5rem, calc(1rem + 10vmin), 10rem);
        }

        .hero > img,
        .hero > .hero-html {
            order: 2;
            width: min(100%, 25rem);
        }

        .stack {
            text-align: start;
        }

        .copy {
            align-items: flex-start;
        }

        .actions {
            justify-content: flex-start;
        }
    }
</style>

<style define:vars={{titleStr: '\'' + Astro.props.title + '\''}}>

    .lyricify-title-lyrics-container {
        position: relative;

        --progress: 40;

        --color-active: rgba(246, 245, 244, 1);
        --color-inactive: rgba(246, 245, 244, 0.2);
        --color-inactive-s: rgba(246, 245, 244, 0.4);
        --fade-width: 32;
        --x-offset: calc(12 * var(--base-f-unit));
        --y-offset: calc(8 * var(--base-f-unit));
        --base-f-unit: 0.182rem;

        transition: padding 0.34s cubic-bezier(0.19, 0.22, 0.18, 0.97),
        backdrop-filter 0.48s ease-in-out,
        transform 0.39s cubic-bezier(0.13, 0.44, 0.3, 1.69),
        filter 0.62s cubic-bezier(0.13, 0.44, 0.3, 1.69);

        margin-left: calc(var(--x-offset) * -1);
        margin-top: calc(var(--y-offset) * -1);
        border-radius: calc(8 * var(--base-f-unit));

        --f-size: clamp(
                var(--sl-text-3xl),
                calc(0.25rem + 5vw),
                var(--sl-text-6xl)
        );
        font-size: var(--f-size);
        line-height: var(--sl-line-height-headings);
        font-weight: 600;

        overflow: visible;
    }

    .lyricify-title-lyrics-view {
        /* font-size: var(--f-size);
        line-height: var(--sl-line-height-headings);
        font-weight: 600; */

        font-size: inherit;
        line-height: inherit;
        font-weight: inherit;

        z-index: 3;

        position: relative;

        display: block;

        padding: calc(var(--y-offset)) calc(var(--x-offset));
        /* background-color: green; */

        cursor: default;

        user-select: none;

        background-image: linear-gradient(
                to right,
                var(--color-active),
                var(--color-active) calc(
                        var(--progress) * 1% -
                        calc(var(--fade-width) * 0.5 * var(--base-f-unit))
                ),
                var(--color-inactive) calc(
                        var(--progress) * 1% +
                        calc(var(--fade-width) * 0.5 * var(--base-f-unit))
                ),
                var(--color-inactive)
        );
        background-clip: text;
        -webkit-background-clip: text;
        // This is being outdated
        // -moz-background-clip: text;

        color: transparent;

        /* text-shadow: 0px 0px 16px var(--color-inactive); */
    }

    .lyricify-title-lyrics-effect1 span {
        display: inline-block;
        /* width: calc(var(--progress) * 1% + var(--p-right) + 8px); */
        width: 100%;
        overflow: hidden;

        background-clip: text;
        -webkit-background-clip: text;
        // This is being outdated
        // -moz-background-clip: text;

        background-image: linear-gradient(
                to right,
                var(--color-active),
                var(--color-active) calc(
                        var(--progress) * 1% -
                        calc(var(--fade-width) * 0.5 * var(--base-f-unit))
                ),
                var(--color-inactive-s) calc(
                        var(--progress) * 1% +
                        calc(var(--fade-width) * 0.5 * var(--base-f-unit))
                ),
                var(--color-inactive-s)
        );

        color: transparent;
    }

    .lyricify-title-lyrics-effect1 {
        padding-top: calc(var(--y-offset));
        padding-left: calc(var(--x-offset));
        --p-right: 5px;
        padding-right: var(--p-right);
        position: absolute;
        display: block;
        content: var(--titleStr);
        top: 0;
        left: 0;
        /* width: calc(
            var(--progress) * 1% - calc(var(--fade-width) * 0.5) *
                var(--base-f-unit) + var(--p-right) + var(--x-offset) * 2
        );
         */
        width: 100%;
        height: 100%;
        z-index: 15;
        overflow-x: hidden;
        overflow-y: visible;
        /* text-overflow: clip; */
        text-wrap: nowrap;
        /* background-color: red; */
        font-size: var(--f-size);
        /* text-shadow: 0 0 4px var(--color-active); */
        /* color: var(--color-active); */
        filter: blur(12px);
        opacity: 0.7;
    }

    .lyricify-title-lyrics-container:hover {
        backdrop-filter: brightness(1.23);
    }

    .lyricify-title-lyrics-container:active {
        transform: scale(0.95);
    }

    :root[data-theme='light'] .lyricify-title-lyrics-container {
        color: var(--sl-color-white);
    }

    :root[data-theme='light'] .lyricify-title-lyrics-container::before {
        opacity: 0;
    }
</style>